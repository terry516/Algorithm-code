# baekjoon 17136 색종이 붙이기 - 삼성 
# 왜 틀렸지...
m = [list(map(int, input().split()))for _ in range(10)]
info = set()
jonge = [0, 0, 0, 0, 0] # 색종이 배당
for i in range(10): # 1인 구역 확인
    for j in range(10):
        if m[i][j] == 1:
            info.add((i, j))

for check in range(5, 1, -1): # 크기 5인 종이부터 돌리기
    for i in range(10):
        for j in range(10):  # 왼쪽 위부터 오른쪽아래로 진행
            if (i, j) in info:
                check_set = set()
                for p in range(check):
                    for q in range(check):
                        check_set.add((i+p, j+q))
                if check_set.issubset(info):
                    info -= check_set
                    jonge[check-1] += 1
                else:
                    if check == 2:
                        info -= {(i, j)}
                        jonge[0] += 1

answer = 1
for i in jonge:
    if i >= 6:
        answer = -1
if answer != -1:
    print(sum(jonge))
else:
    print(answer)

''' 정답인 코드
def f(n, s): # n 사용한 종이수, s 남은 1
    global minV
    if s==0:
        if minV>n:
            minV = n
    elif n>=minV:
        return
    elif minV==4:
        return
    elif sum(paper)==0:
        return
    else:
        for i in range(10):
            for j in range(10):
                if m[i][j]==1 and visited[i][j] ==0:
                    # 왼쪽 모서리로 가정
                    # 덮는 크기
                    for k in range(5, 0, -1):
                        # 종이가 남아있고
                        if paper[k]>0 and i+k<=10 and j+k<=10:
                            cover = 0
                            for r in range(i, i+k):
                                for c in range(j, j+k):
                                    if visited[r][c]==0:
                                        cover += m[r][c]
                            # 덮어지면
                            if cover==(k*k):
                                for r in range(i, i + k):
                                    for c in range(j, j + k):
                                        visited[r][c] = 1
                                paper[k] -= 1
                                print(k,n + 1, s - k * k)
                                f(n+1, s-k*k)
                                for r in range(i, i + k):
                                    for c in range(j, j + k):
                                        visited[r][c] = 0
                                paper[k] += 1
                    return

m = [list(map(int, input().split()))for _ in range(10)]
visited = [[0]*10 for _ in range(10)]
minV = 26
s = 0
paper = [0, 5, 5, 5, 5, 5]
for i in range(10):
    for j in range(10):
        if m[i][j]==1:
            s += 1
f(0, s)
if minV == 26:
    minV = -1
print(minV)
'''